A kobject is an object of type struct kobject. Kobjects are generally not
  interesting on their own; instead, they are usually embedded within some
  other structure which contains the stuff the code is really interested
  in. No structure should have EVER have more than one kobject embedded
  within it. Because kobjects are dynamic, they must not be declared
  statically or on the stack, but instead, always allocated dynamically.

Initialization of kobjects
  void kobject_init(struct kobject *kobj, struct kobj_type *ktype);
  int kobject_add(struct kobject *kobj, struct kobject *parent,
		  const char *fmt, ...);
  int kobject_rename(struct kobject *kobj, const char *new_name);
  const char *kobject_name(const struct kobject *kobj);
  int kobject_init_and_add(struct kobject *kobj, struct kobj_type *ktype,
			   struct kobject *parent, const char *fmt, ...);
  int kobject_uevent(struct kobject *kobj, enum kobject_action action);
  struct kobject *kobject_get(struct kobject *kobj);
  void kobject_put(struct kobject *kobj);

  struct kobject *kobject_create_and_add(char *name, struct kobject *parent);

  struct kset *kset_create_and_add(const char *name, struct kset_uevent_ops *u,
				   struct kobject *parent);
  void kset_unregister(struct kset *kset);

